<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yun.mq.mqserver.mapper.MetaMapper">
    <update id="createExchangeTable">
        create table if not exists exchange (
        name varchar(50) primary key,
        type int,
        durable boolean,
        autoDelete boolean,
        arguments varchar(1024)
        );
    </update>
    <insert id="insertExchange" parameterType="com.yun.mq.mqserver.core.Exchange">
        insert into exchange values(#{name},#{type},#{durable},#{autoDelete},#{arguments});
    </insert>
    <delete id="deleteExchange" parameterType="java.lang.String">
        delete from exchange where name = #{exchangeName};
    </delete>
    <select id="selectAllExchanges" resultType="com.yun.mq.mqserver.core.Exchange">
        select *from exchange;
    </select>


    <update id="createQueueTable">
        create table if not exists queue (
        name varchar(50),
        durable boolean,
        exclusive boolean,
        autoDelete boolean,
        arguments varchar(1024)
        );

    </update>
    <insert id="insertQueue" parameterType="com.yun.mq.mqserver.core.MSGQueue">
        insert into queue values (#{name},#{durable},#{exclusive},#{autoDelete},#{arguments});
    </insert>
    <delete id="deleteQueue" parameterType="java.lang.String">
        delete from queue where name = #{queueName};
    </delete>
    <select id="selectAllQueues" resultType="com.yun.mq.mqserver.core.MSGQueue">
        select *from queue;
    </select>

    <update id="createBindingTable">
        create table if not exists binding (
        queueName varchar(50),
        exchangeName varchar(50),
        bindingKey varchar(256)
        );
    </update>
    <insert id="insertBinding" parameterType="com.yun.mq.mqserver.core.Binding">
        insert into binding values(#{queueName},#{exchangeName},#{bindingKey});
    </insert>
    <delete id="deleteBinding" parameterType="com.yun.mq.mqserver.core.Binding">
        delete from binding where queueName = #{queueName} and exchangeName = #{exchangeName};
    </delete>
    <select id="selectAllBindings" resultType="com.yun.mq.mqserver.core.Binding">
        select *from binding;
    </select>

</mapper>